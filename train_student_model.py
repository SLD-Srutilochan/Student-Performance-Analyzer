# -*- coding: utf-8 -*-
"""train_student_model

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13q79xj_mCfxa5DLVfM99eJ6Od7YO0ZmH
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Load dataset
df = pd.read_csv("/content/student_marks.csv", na_values=["null"])
df.dropna(inplace=True)  # Remove any rows with missing values
df["Average"] = df[["Maths", "Physics", "Chemistry", "English", "Computer_Science"]].mean(axis=1)
df["Performance"] = df["Average"].apply(lambda x: "Pass" if x >= 50 else "Fail")

print("Dataset Head:\n", df.head())
print("\nStatistics:\n", df.describe())

sns.countplot(data=df, x="Performance")
plt.title("Pass vs Fail Count")
plt.show()

# Select only numerical features for correlation analysis
numerical_features = df.select_dtypes(include=['number'])

# Calculate the correlation matrix
correlation_matrix = numerical_features.corr()

# Create the heatmap
sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm")
plt.title("Correlation Heatmap")
plt.show()

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = RandomForestClassifier()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='d', cmap='Blues')
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix")
plt.show()

