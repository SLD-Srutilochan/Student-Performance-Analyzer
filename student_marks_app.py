# -*- coding: utf-8 -*-
"""student_marks_app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15NDMvZKPcFMl65imbyr-oi1-nECTdHRn
"""

import streamlit as st
import pandas as pd
from sklearn.ensemble import RandomForestClassifier

# Load dataset
df = pd.read_csv("student_marks.csv", na_values=["null"])
df.dropna(inplace=True)  # Remove any rows with missing values
df["Average"] = df[["Maths", "Physics", "Chemistry", "English", "Computer_Science"]].mean(axis=1)
df["Performance"] = df["Average"].apply(lambda x: "Pass" if x >= 50 else "Fail")

def load_data():
    df = pd.read_csv("student_marks.csv")
    df["Average"] = df[["Maths", "Physics", "Chemistry", "English", "Computer_Science"]].mean(axis=1)
    df["Performance"] = df["Average"].apply(lambda x: "Pass" if x >= 50 else "Fail")
    return df

df = load_data()

st.title("ðŸŽ“ Student Marks Performance Analyzer")

if st.checkbox("Show Raw Data"):
    st.write(df)

X = df[["Maths", "Physics", "Chemistry", "English", "Computer_Science"]]
y = df["Performance"].map({"Pass": 1, "Fail": 0})
model = RandomForestClassifier()
model.fit(X, y)

st.subheader("ðŸ“ˆ Predict Student Performance")
maths = st.slider("Maths", 0, 100, 50)
physics = st.slider("Physics", 0, 100, 50)
chemistry = st.slider("Chemistry", 0, 100, 50)
english = st.slider("English", 0, 100, 50)
cs = st.slider("Computer Science", 0, 100, 50)

if st.button("Predict"):
    user_input = [[maths, physics, chemistry, english, cs]]
    prediction = model.predict(user_input)[0]
    result = "Pass" if prediction == 1 else "Fail"
    st.subheader(f"ðŸ“Œ Prediction: {result}")

